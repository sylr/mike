# Mike's Makefile
# author: Sylvain Rabot <sylvain@abstraction.fr>
# date: 03/07/2010
# copyright: All rights reserved

#          __  _________ ______
#         /  |/  /  _/ //_/ __/
#        / /|_/ // // ,< / _/  
#       /_/  /_/___/_/|_/___/  
#

# The default target of this Makefile is...
dry-run::

ECHO                    = @ECHO@
CAT                     = @CAT@
RM                      = @RM@ -f
GIT                     = @GIT@
SLEEP                   = @SLEEP@
SLEEP_TIME              ?= 0.1
DATE                    = `@DATE@`
PSQL                    ?= @PSQL@
PSQL                    += -v 'ON_ERROR_STOP=on'
SED                     = @SED@
DATABASE_USER           = @DATABASE_USER@
DATABASE_NAME           = @DATABASE_NAME@
DATABASE_HOST           = @DATABASE_HOST@
DATABASE_PORT           = @DATABASE_PORT@
DATABASE_TRIGGERS       = $(wildcard triggers/*.pl)
DATABASE_TRIGGERS       += $(wildcard triggers/*.sql)
DATABASE_FILES          = mike.sql
DATABASE_FILES          += $(DATABASE_TRIGGERS)
DATABASE_DUMPS          = $(patsubst %.sql, %.dump, $(filter %.sql, $(DATABASE_FILES)))
DATABASE_DUMPS          += $(patsubst %.pl, %.dump, $(filter %.pl,  $(DATABASE_FILES)))
TARGET_FILE             = mike.o
MIKE_VERSION_FILE       = MIKE_VERSION_FILE
MIKE_TAG_DIFF_FILE      = MIKE_TAG_DIFF_FILE
MIKE_COMMIT_DIFF_FILE   = MIKE_COMMIT_DIFF_FILE

$(MIKE_VERSION_FILE):
	@$(RM) $(MIKE_VERSION_FILE)
	@$(SHELL_PATH) ./MIKE_VERSION_GEN $(MIKE_VERSION_FILE) $(MIKE_COMMIT_DIFF_FILE)
-include $(MIKE_VERSION_FILE)

ifeq ($(CREATE_SCHEMA),Yes)
	CREATE_SCHEMA = "DROP SCHEMA IF EXISTS mike CASCADE; CREATE SCHEMA mike;"
else
	CREATE_SCHEMA = ""
endif
	
clean-target:
	@$(ECHO) '    ' REMOVING $(TARGET_FILE); $(RM) $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)

info:
	@$(ECHO) '    ' LINK MIKE_VERSION $(MIKE_VERSION);      $(ECHO) "INSERT INTO mike.info VALUES ('MIKE_VERSION', '$(MIKE_VERSION)');" >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)
	@$(ECHO) '    ' LINK MIKE_COMMIT $(MIKE_COMMIT);        $(ECHO) "INSERT INTO mike.info VALUES ('MIKE_COMMIT', '$(MIKE_COMMIT)');" >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)
	@$(ECHO) '    ' LINK MIKE_BRANCH $(MIKE_BRANCH);        $(ECHO) "INSERT INTO mike.info VALUES ('MIKE_BRANCH', '$(MIKE_BRANCH)');" >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)
	@$(ECHO) -n; \
	if test -f $(MIKE_TAG_DIFF_FILE); then \
	$(ECHO) '    ' LINK MIKE_TAG_DIFF_FILE;                 ($(ECHO) "INSERT INTO mike.info VALUES ('MIKE_TAG_DIFF', E'"; \
	                                                        cat $(MIKE_TAG_DIFF_FILE) | $(SED) "s/\(['\\]\)/\1\1/g"; \
	                                                        $(ECHO) "');";) >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME); \
	fi
	@$(ECHO) -n; \
	if test -f $(MIKE_COMMIT_DIFF_FILE); then \
	$(ECHO) '    ' LINK MIKE_COMMIT_DIFF_FILE;              ($(ECHO) "INSERT INTO mike.info VALUES ('MIKE_COMMIT_DIFF', E'"; \
	                                                        cat $(MIKE_COMMIT_DIFF_FILE) | $(SED) "s/\(['\\]\)/\1\1/g"; \
	                                                        $(ECHO) "');";) >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME); \
	fi
	@$(ECHO) '    ' LINK INSTALL_DATE $(DATE);              $(ECHO) "INSERT INTO mike.info VALUES ('INSTALL_DATE', NOW()::varchar);" >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)
	@$(ECHO) '    ' LINK MIKE_USER;                         $(ECHO) "INSERT INTO mike.user VALUES (1, 'mike', 'mike');" >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)
    
dumps: clean-target $(DATABASE_DUMPS) info

%.dump : %.sql
	@$(ECHO) '    ' LINK $<; $(CAT) $< >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)

%.dump : %.pl
	@$(ECHO) '    ' LINK $<; $(CAT) $< >> $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME)

dry-run:: dumps
	@$(ECHO) '    ' EXECUTING; $(SLEEP) $(SLEEP_TIME)
	@$(ECHO);   ($(ECHO) "BEGIN;"; $(ECHO) $(CREATE_SCHEMA); $(CAT) $(TARGET_FILE); $(ECHO) "ROLLBACK;") | \
	                $(PSQL) -U $(DATABASE_USER) -d $(DATABASE_NAME)
	@$(ECHO) 
	@$(ECHO) "THIS WAS A DRY RUN !!!!"

install: dumps
	@$(ECHO) '    ' EXECUTING; $(SLEEP) $(SLEEP_TIME)
	@$(ECHO);   ($(ECHO) "BEGIN;"; $(ECHO) $(CREATE_SCHEMA); $(CAT) $(TARGET_FILE); $(ECHO) "COMMIT;") | \
	                $(PSQL) -U $(DATABASE_USER) -d $(DATABASE_NAME) --host $(DATABASE_HOST) --port $(DATABASE_PORT)

clean:
	@$(GIT) clean -fdx

mikeclean:
	@$(ECHO) '    ' REMOVING $(TARGET_FILE); $(RM) $(TARGET_FILE); $(SLEEP) $(SLEEP_TIME);
	@$(ECHO) '    ' REMOVING MIKE_FILE_VERSION; $(RM) $(MIKE_VERSION_FILE); $(SLEEP) $(SLEEP_TIME);
	@$(ECHO) '    ' REMOVING MIKE_COMMIT_DIFF; $(RM) $(MIKE_COMMIT_DIFF_FILE); $(SLEEP) $(SLEEP_TIME);

drop-schema:
	@$(ECHO) '    ' DROPPING mike SCHEMA; $(ECHO) "DROP SCHEMA IF EXITS mike;" | $(PSQL) -U $(DATABASE_USER) -d $(DATABASE_NAME)

.PHONY: $(MIKE_VERSION_FILE)

