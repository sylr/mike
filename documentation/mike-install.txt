mike-install(1)
===============

NAME
----
mike-install - mike's install procedure

SYNOPSIS
--------
[verse]
'autoconf'
'./configure' [--help[=short]]
    [--enable-create-database]
    [--enable-create-schema]
    [--enable-no-atime]
    [--enable-no-volume-lock]
    [--enable-tree-max-depth[=<depth>]]
    [DATABASE_USERNAME=<database_username>]
    [DATABASE_NAME=<database_name>]
    [DATABASE_HOST=<database_host>]
    [DATABASE_PORT=<database_port>]
'make'
'make' [test|install|clean]
'make' [graph|gource|stats]
'make' [doc|html|man|install-doc|install-html|install-man]

DESCRIPTION
-----------
Mike's install guide.

Getting the source
------------------
Mike uses 'Git' as Source Code Management. You must have it to get the source.
Once installed proceed that way :

[source,shell]
--------------------------
sylvain@kheops:~/$ git clone {mike_git_url} mike.git
sylvain@kheops:~/$ cd mike.git
--------------------------

Debian requirements
-------------------
  - build-essential
  - postgresql-8.4
  - postgresql-client-8.4
  - postgresql-contrib-8.4
  - postgresql-plperl-8.4
  - libpq-dev
  - asciidoc 
  - apgdiff (optional)
  - git-core (optional, for development)
  - gource (optional, for development)
  - gitstats (optional, for development)

Install
-------
Mike relies on 'autotools' and 'make' for automatic install.

First, you have to generate the 'configure' script by running the 'autoconf' tool
at the 'root' of Mike. Then, launch the './configure' script with the desired options,
it will check for external programs needed for Mike's install and prepare the 'Makefile'
with 'configuration' values passed as arguments. Proceed by lauching 'make' with
the desired target, the default one being dry-run, which performs a test install
on a pre-exisiting database.

[source,shell]
-------------------------
sylvain@kheops:~/mike.git/$ autoconf
sylvain@kheops:~/mike.git/$ ./configure DATABASE_USERNAME=sylvain
sylvain@kheops:~/mike.git/$ make
-------------------------

Note that you can 'override' configuration values given to 'configure' without having
to regenerate the Makefile each time. +
To do so proceed like in the following example:

[source,shell]
-------------------------
sylvain@kheops:~/mike.git/$ ./configure DATABASE_USERNAME=sylvain
sylvain@kheops:~/mike.git/$ make install DATABASE_USERNAME=mike DATABASE_NAME=my_vfs
-------------------------

configure options
-----------------
--enable-create-database::
    enable database creation with DATABASE_NAME. imply --enable-create-schema. If
    the database already exists it will be dropped and re-created.

--enable-create-schema::
    enable mike schema creation into DATABASE_NAME. If the schema already exists
    it will be dropped and re-created.

--enable-no-volume-lock::
    creating a xfile using xtouch() update the virtual size of the volume chosen.
    Using this option will prevent virtual size update which will enable 'long
    transactions' creating xfiles to run simultaneously because 'no lock' on the
    volume table records are used. This option is for 'test use only'.

--enable-tree-max-depth::
    enable tree maximum depth support in mike. This feature is 'enabled by default' and
    its value is '24' which means a directory can only have '22 ancestors', it being
    the at the 23rd level and the last level beign reserved for files. Disabling
    this feature can 'speed up some operations' at a 'low depth' but allows big 'deep
    trees' which could lead to' performance issues' because a modification on a directory
    will update its ancestors as well.

--enable-no-atime::
    disable atime support in order to improve performances.

--with-a2x=<path>::
    specify a2x path.

--with-apgdiff=<path>::
    specify apgdiff path.

--with-asciidoc=<path>::
    specify asciidoc path.

--with-awk=<path>::
    specify awk path.

--with-bash=<path>::
    specify bash path.

--with-createdb=<path>::
    specify createdb path.

--with-docbook2odf=<path>::
    specify docbook2odf path.

--with-docbook2odf=<path>::
    specify docbook2odf path.

--with-docbook2pdf=<path>::
    specify docbook2pdf path.

--with-git=<path>::
    specify git path.

--with-pg_config=<path>::
    specify pg_config path.

--with-pg_dump=<path>::
    specify pg_dump path.

--with-psql=<path>::
    specify psql path.

--with-sed=<path>::
    specify sed path.

--with-xmlto=<path>::
    specify xmlto path.

DATABASE_NAME=<database>::
    database name used to install mike (default: mike).

DATABASE_USERNAME=<user>::
    database user name used to access DATABASE_NAME (default: mike).

DATABASE_HOST=<host>::
    database host, if not specified, psql will search for local PotsgreSQL server
    listening on a unix socket.

DATABASE_PORT=<port>::
    database port, empty is not specified.

make targets
------------
'clean'::
    Remove all file not tracked in the repository.

'doc'::
    Generate both html and man documentation.

'drop-database'::
    Drop DATABASE_NAME database.

'drop-schema'::
    Drop mike schema.

'dry-run'::
    Perform a test install which will be rollbacked. This is the 'default target'.

WARNING: Note that if '--enable-create-database' has been specified to the configure
script or 'ENABLE_CREATE_DATABASE' set to 'Yes', the database will be 'dropped'
and all its content will be 'lost'.

'gource'::
    Launch gource if installed (development environment required).

'graph'::
    Display mike's development graph (development environment required).

'html'::
    Generate the html documentation.

'install'::
    Perform mike install on the database specified to the configure script or on
    DATABASE_NAME if specified.

'install-doc'::
    install both html and man documentation.

'install-html'::
    install the html documentation.

'install-man'::
    install the man pages.

'man'::
    Generate man pages.

'stats'::
    Display mike's developers commit statistics (development environment required).

'test'::
    Run mike's battery test.

ENABLE_CREATE_DATABASE=[Yes|No]::
    If set to 'Yes', will behave like if '--enable-create-database' had been specified
    to 'configure'.

ENABLE_CREATE_SCHEMA=[Yes|No]::
    If set to 'Yes', will behave like if '--enable-create-schema' had been specified
    to 'configure'.

Authors
-------
Written by Sylvain Rabot <sylvain@abstraction.fr>

MIKE
----
Part of the linkmike:mike[3] suite.
